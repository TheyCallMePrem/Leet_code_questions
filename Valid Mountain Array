Given an array of integers arr, return true if and only if it is a valid mountain array.

Recall that arr is a mountain array if and only if:

arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < arr[i]
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]

 

Example 1:

Input: arr = [2,1]
Output: false
Example 2:

Input: arr = [3,5,5]
Output: false
Example 3:

Input: arr = [0,3,2,1]
Output: true
 

Constraints:

1 <= arr.length <= 104
0 <= arr[i] <= 104

CODE: 

class Solution:
    def validMountainArray(self, arr: List[int]) -> bool:
        
        if(len(arr)<3):
            
            return False
        else:
            loc_max=arr.index(max(arr))
            if(loc_max==0 or loc_max==(len(arr)-1) or arr[len(arr)-1]==max(arr) or arr[0]==max(arr)):
                return False
            i=0
            while(i<loc_max):
                if(arr[i]>arr[i+1] or arr[i]==arr[i+1]):
                    return False
                i+=1
           
            i=loc_max+1
            while(i<(len(arr)-1)):
                #print(i)
                if(arr[i]<arr[i+1] or arr[i]==arr[i+1]):
                    return False
                i+=1
            return True
